--made by markk

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\124\72","\97\82\102\90\222"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v121=v13(v103,v30);v30=nil;return v121;else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (0==v104) then v105=(v43/((5 -3)^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + (5 -3) );v29=v29 + 2 ;return (v49 * (493 -237)) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,2 -1 ,639 -(555 + 64) ) * (2^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==(931 -(857 + 74))) then return v59 * 0 ;else local v111=0;while true do if (0==v111) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=1, #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v78=1,v67 do local v79=0;local v80;local v81;while true do if (v79==0) then v80=v32();v81=nil;v79=1;end if (v79==1) then if (v80==1) then v81=v32()~=(927 -(214 + 713)) ;elseif (v80==2) then v81=v35();elseif (v80==(1 + 2)) then v81=v36();end v68[v78]=v81;break;end end end v66[3]=v32();for v82=1,v34() do local v83=0;local v84;while true do if (0==v83) then v84=v32();if (v31(v84,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==0) then v118=v31(v84,2,3);v119=v31(v84,1 + 3 ,6);v117=1;end if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v68[v120[4]];end v63[v82]=v120;break;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then v120[3]=v33();v120[4]=v33();elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3 + 0 ]=v34() -(2^16) ;elseif (v118==3) then v120[3]=v34() -(2^16) ;v120[5 -1 ]=v33();end v117=2;end if (v117==2) then if (v31(v119,1,1066 -(68 + 997) )==1) then v120[2]=v68[v120[2]];end if (v31(v119,2,2)==1) then v120[3]=v68[v120[3]];end v117=3;end end end break;end end end for v85=1271 -(226 + 1044) ,v34() do v64[v85-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[2];local v75=v70[3];return function(...) local v87=v73;local v88=v74;local v89=v75;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -(4 -3) ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + (118 -(32 + 85)) ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do v99=v87[v91];v100=v99[1];if (v100<=39) then if (v100<=(19 + 0)) then if (v100<=(2 + 7)) then if (v100<=4) then if (v100<=1) then if (v100==0) then v97[v99[2]]=v97[v99[3]];else local v134=0;local v135;while true do if (0==v134) then v135=v99[2];do return v97[v135](v21(v97,v135 + 1 ,v99[3]));end break;end end end elseif (v100<=2) then local v136=v99[959 -(892 + 65) ];v97[v136]=v97[v136](v21(v97,v136 + (2 -1) ,v92));elseif (v100>3) then local v225=0;local v226;local v227;local v228;while true do if (v225==1) then v228=v97[v226 + 2 ];if (v228>0) then if (v227>v97[v226 + 1 ]) then v91=v99[3];else v97[v226 + 3 ]=v227;end elseif (v227<v97[v226 + 1 ]) then v91=v99[3];else v97[v226 + 3 ]=v227;end break;end if (v225==0) then v226=v99[2];v227=v97[v226];v225=1;end end elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=6) then if (v100>(9 -4)) then local v138=0;local v139;local v140;local v141;local v142;while true do if (v138==1) then v92=(v141 + v139) -1 ;v142=0;v138=2;end if (v138==0) then v139=v99[3 -1 ];v140,v141=v90(v97[v139](v97[v139 + 1 ]));v138=1;end if (v138==2) then for v328=v139,v92 do local v329=0;while true do if (v329==0) then v142=v142 + (351 -(87 + 263)) ;v97[v328]=v140[v142];break;end end end break;end end else local v143=0;local v144;local v145;local v146;local v147;while true do if (v143==0) then v144=v99[2];v145,v146=v90(v97[v144](v21(v97,v144 + 1 ,v92)));v143=1;end if (v143==2) then for v330=v144,v92 do v147=v147 + 1 ;v97[v330]=v145[v147];end break;end if (v143==1) then v92=(v146 + v144) -1 ;v147=0;v143=2;end end end elseif (v100<=7) then v97[v99[2]]= #v97[v99[3]];elseif (v100==8) then local v229=v99[2];local v230={};for v297=1, #v96 do local v298=v96[v297];for v333=0, #v298 do local v334=0;local v335;local v336;local v337;while true do if (v334==1) then v337=v335[2];if ((v336==v97) and (v337>=v229)) then local v422=0;while true do if (0==v422) then v230[v337]=v336[v337];v335[1]=v230;break;end end end break;end if (v334==0) then v335=v298[v333];v336=v335[1];v334=1;end end end end elseif  not v97[v99[182 -(67 + 113) ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(11 + 3)) then if (v100<=11) then if (v100>10) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else local v149=0;local v150;while true do if (v149==0) then v150=v99[2];v97[v150]=v97[v150]();break;end end end elseif (v100<=12) then v97[v99[2]]={};elseif (v100>(31 -18)) then v97[v99[2 + 0 ]]=v97[v99[3]]%v97[v99[4]] ;else v91=v99[3];end elseif (v100<=16) then if (v100>15) then local v152=v99[2];v97[v152](v21(v97,v152 + 1 ,v99[3]));else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100<=(67 -50)) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100==18) then for v301=v99[2],v99[3] do v97[v301]=nil;end else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=29) then if (v100<=(976 -(802 + 150))) then if (v100<=21) then if (v100==20) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v155=v99[2];local v156,v157=v90(v97[v155](v21(v97,v155 + 1 ,v92)));v92=(v157 + v155) -1 ;local v158=0 -0 ;for v214=v155,v92 do local v215=0;while true do if (v215==0) then v158=v158 + (1 -0) ;v97[v214]=v156[v158];break;end end end end elseif (v100<=(17 + 5)) then local v159=v99[999 -(915 + 82) ];local v160=v97[v159];local v161=v97[v159 + 2 ];if (v161>0) then if (v160>v97[v159 + 1 ]) then v91=v99[3];else v97[v159 + 3 ]=v160;end elseif (v160<v97[v159 + 1 ]) then v91=v99[3];else v97[v159 + 3 ]=v160;end elseif (v100==23) then local v236=0;local v237;while true do if (0==v236) then v237=v99[2];do return v97[v237](v21(v97,v237 + 1 ,v99[3]));end break;end end else local v238=0;local v239;while true do if (v238==0) then v239=v99[2];v97[v239](v97[v239 + 1 ]);break;end end end elseif (v100<=26) then if (v100>(70 -45)) then do return v97[v99[2 + 0 ]]();end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=27) then do return;end elseif (v100==28) then local v240=v99[2];do return v21(v97,v240,v92);end else v97[v99[2]]();end elseif (v100<=34) then if (v100<=(40 -9)) then if (v100==30) then v97[v99[2]]=v71[v99[3]];else v97[v99[1189 -(1069 + 118) ]]= #v97[v99[3]];end elseif (v100<=32) then v97[v99[2]]={};elseif (v100>(74 -41)) then local v241=0;local v242;local v243;while true do if (v241==1) then for v379=v242 + 1 ,v99[6 -3 ] do v15(v243,v97[v379]);end break;end if (v241==0) then v242=v99[2];v243=v97[v242];v241=1;end end else v97[v99[2]][v99[3]]=v97[v99[4]];end elseif (v100<=36) then if (v100==35) then for v216=v99[2],v99[3] do v97[v216]=nil;end elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[1 + 2 ];end elseif (v100<=37) then v97[v99[2]]();elseif (v100>38) then local v247=0;local v248;while true do if (0==v247) then v248=v99[2];do return v21(v97,v248,v92);end break;end end else v97[v99[2]]=v99[3];end elseif (v100<=59) then if (v100<=49) then if (v100<=44) then if (v100<=41) then if (v100>40) then v97[v99[2]]=v99[3];else local v169=0;local v170;local v171;while true do if (v169==0) then v170=v99[2];v171={};v169=1;end if (v169==1) then for v345=1, #v96 do local v346=0;local v347;while true do if (v346==0) then v347=v96[v345];for v411=0 -0 , #v347 do local v412=0;local v413;local v414;local v415;while true do if (v412==1) then v415=v413[2];if ((v414==v97) and (v415>=v170)) then v171[v415]=v414[v415];v413[1]=v171;end break;end if (v412==0) then v413=v347[v411];v414=v413[1];v412=1;end end end break;end end end break;end end end elseif (v100<=(42 + 0)) then local v172=0;local v173;local v174;local v175;local v176;while true do if (v172==2) then for v348=v173,v92 do v176=v176 + 1 ;v97[v348]=v174[v176];end break;end if (v172==1) then v92=(v175 + v173) -1 ;v176=0;v172=2;end if (v172==0) then v173=v99[2];v174,v175=v90(v97[v173](v21(v97,v173 + 1 ,v99[3])));v172=1;end end elseif (v100==43) then local v251=0;local v252;while true do if (v251==0) then v252=v99[2];v97[v252]=v97[v252](v21(v97,v252 + 1 ,v99[3]));break;end end else local v253=0;local v254;local v255;local v256;local v257;while true do if (0==v253) then v254=v99[2];v255,v256=v90(v97[v254](v97[v254 + 1 ]));v253=1;end if (v253==1) then v92=(v256 + v254) -1 ;v257=0;v253=2;end if (v253==2) then for v380=v254,v92 do local v381=0;while true do if (0==v381) then v257=v257 + (792 -(368 + 423)) ;v97[v380]=v255[v257];break;end end end break;end end end elseif (v100<=46) then if (v100>(141 -96)) then v97[v99[2]]=v97[v99[3]][v99[4]];else local v179=v99[2];v97[v179](v21(v97,v179 + 1 ,v92));end elseif (v100<=47) then local v180=0;local v181;local v182;while true do if (v180==1) then v97[v181 + 1 ]=v182;v97[v181]=v182[v99[4]];break;end if (v180==0) then v181=v99[2];v182=v97[v99[21 -(10 + 8) ]];v180=1;end end elseif (v100>48) then local v258=0;local v259;local v260;local v261;while true do if (v258==0) then v259=v99[2];v260=v97[v259];v258=1;end if (v258==1) then v261=v99[3];for v382=1,v261 do v260[v382]=v97[v259 + v382 ];end break;end end else local v262=v99[2];v97[v262]=v97[v262](v21(v97,v262 + 1 ,v92));end elseif (v100<=(207 -153)) then if (v100<=51) then if (v100>(492 -(416 + 26))) then v97[v99[2]]=v40(v88[v99[3]],nil,v72);else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=52) then do return;end elseif (v100==53) then v97[v99[2]]=v99[3] + v97[v99[4]] ;else local v265=v99[6 -4 ];local v266=v97[v265];for v310=v265 + 1 ,v92 do v15(v266,v97[v310]);end end elseif (v100<=(25 + 31)) then if (v100>55) then local v186=0;local v187;local v188;local v189;while true do if (v186==0) then v187=v99[2];v188=v97[v187 + (3 -1) ];v186=1;end if (v186==2) then if (v188>0) then if (v189<=v97[v187 + 1 ]) then v91=v99[3];v97[v187 + 3 ]=v189;end elseif (v189>=v97[v187 + (439 -(145 + 293)) ]) then v91=v99[3];v97[v187 + 3 ]=v189;end break;end if (v186==1) then v189=v97[v187] + v188 ;v97[v187]=v189;v186=2;end end else local v190=0;local v191;while true do if (v190==0) then v191=v99[2];v97[v191](v21(v97,v191 + 1 ,v99[3]));break;end end end elseif (v100<=57) then do return v97[v99[432 -(44 + 386) ]]();end elseif (v100==58) then local v267=0;local v268;local v269;local v270;while true do if (v267==1) then v270={};v269=v18({},{[v7("\17\148\66\201\83\169\54","\204\78\203\43\167\55")]=function(v385,v386) local v387=0;local v388;while true do if (0==v387) then v388=v270[v386];return v388[1][v388[2]];end end end,[v7("\110\154\164\38\9\181\95\161\175\59","\220\49\197\202\67\126")]=function(v389,v390,v391) local v392=v270[v390];v392[1][v392[2]]=v391;end});v267=2;end if (v267==0) then v268=v88[v99[3]];v269=nil;v267=1;end if (v267==2) then for v394=1,v99[4] do local v395=0;local v396;while true do if (v395==1) then if (v396[1]==0) then v270[v394-1 ]={v97,v396[3]};else v270[v394-1 ]={v71,v396[3]};end v96[ #v96 + 1 ]=v270;break;end if (v395==0) then v91=v91 + 1 ;v396=v87[v91];v395=1;end end end v97[v99[2]]=v40(v268,v269,v72);break;end end else v97[v99[2]]=v40(v88[v99[3]],nil,v72);end elseif (v100<=69) then if (v100<=(21 + 43)) then if (v100<=(50 + 11)) then if (v100>60) then local v192=v99[2];v97[v192]=v97[v192]();else v97[v99[774 -(201 + 571) ]]=v97[v99[3]] + v99[4] ;end elseif (v100<=62) then v97[v99[2]]=v72[v99[3]];elseif (v100==63) then local v272=0;local v273;local v274;local v275;while true do if (v272==1) then v275=v97[v273] + v274 ;v97[v273]=v275;v272=2;end if (2==v272) then if (v274>0) then if (v275<=v97[v273 + (1139 -(116 + 1022)) ]) then local v428=0;while true do if (v428==0) then v91=v99[3];v97[v273 + 3 ]=v275;break;end end end elseif (v275>=v97[v273 + 1 ]) then local v429=0;while true do if (v429==0) then v91=v99[12 -9 ];v97[v273 + 3 ]=v275;break;end end end break;end if (0==v272) then v273=v99[2];v274=v97[v273 + 2 ];v272=1;end end else local v276=v88[v99[3]];local v277;local v278={};v277=v18({},{[v7("\248\251\87\57\95\1\223","\100\167\164\62\87\59")]=function(v315,v316) local v317=v278[v316];return v317[1][v317[2]];end,[v7("\191\105\78\204\240\11\39\132\83\88","\73\224\54\32\169\135\98")]=function(v318,v319,v320) local v321=0;local v322;while true do if (0==v321) then v322=v278[v319];v322[1][v322[2]]=v320;break;end end end});for v323=1,v99[4] do local v324=0;local v325;while true do if (1==v324) then if (v325[1]==0) then v278[v323-(1 + 0) ]={v97,v325[3]};else v278[v323-1 ]={v71,v325[3]};end v96[ #v96 + 1 ]=v278;break;end if (v324==0) then v91=v91 + 1 ;v325=v87[v91];v324=1;end end end v97[v99[2]]=v40(v276,v277,v72);end elseif (v100<=(234 -168)) then if (v100==65) then if (v99[861 -(814 + 45) ]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[7 -4 ];end else v97[v99[1 + 1 ]]=v97[v99[3]]%v99[4] ;end elseif (v100<=67) then v97[v99[2]]=v97[v99[3]];elseif (v100>68) then v91=v99[3];elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=74) then if (v100<=(26 + 45)) then if (v100==70) then local v200=v99[2];local v201=v97[v200];local v202=v99[3];for v218=1,v202 do v201[v218]=v97[v200 + v218 ];end else local v203=v99[2];local v204=v97[v203];for v221=v203 + 1 ,v92 do v15(v204,v97[v221]);end end elseif (v100<=72) then local v205=0;local v206;while true do if (v205==0) then v206=v99[2];v97[v206](v97[v206 + 1 ]);break;end end elseif (v100==73) then local v282=0;local v283;while true do if (v282==0) then v283=v99[887 -(261 + 624) ];v97[v283]=v97[v283](v21(v97,v283 + 1 ,v99[3]));break;end end else v97[v99[2]]=v71[v99[3]];end elseif (v100<=77) then if (v100<=75) then v97[v99[2]][v99[3]]=v97[v99[6 -2 ]];elseif (v100==76) then local v286=v99[2];v97[v286](v21(v97,v286 + 1 ,v92));else local v287=0;local v288;local v289;while true do if (v287==1) then v97[v288 + 1 ]=v289;v97[v288]=v289[v99[1084 -(1020 + 60) ]];break;end if (0==v287) then v288=v99[2];v289=v97[v99[3]];v287=1;end end end elseif (v100<=78) then local v209=v99[2];local v210,v211=v90(v97[v209](v21(v97,v209 + 1 ,v99[3])));v92=(v211 + v209) -1 ;local v212=0;for v222=v209,v92 do v212=v212 + 1 ;v97[v222]=v210[v212];end elseif (v100>79) then v97[v99[1425 -(630 + 793) ]]=v72[v99[3]];elseif (v97[v99[6 -4 ]]==v99[4]) then v91=v91 + (4 -3) ;else v91=v99[3];end v91=v91 + 1 + 0 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
