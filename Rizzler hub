--made by mark

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\94\24","\144\112\54\227\235\230\78\205"),function(v42) if (v9(v42,5 -3 )==79) then local v102=0;while true do if (v102==0) then v30=v8(v11(v42,1,1));return "";end end else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then local v121=v13(v104,v30);v30=nil;return v121;else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + (1 -0))) ;return v105-(v105%1) ;else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (1==v47) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + (4 -2) );v29=v29 + 2 ;v47=1;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==0) then v56=v34();v57=v34();v55=1;end if (1==v55) then v58=620 -(555 + 64) ;v59=(v31(v57,1,20) * ((933 -(857 + 74))^32)) + v56 ;v55=2;end if (v55==3) then if (v60==(927 -(214 + 713))) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==(513 + 1534)) then return ((v59==(0 + 0)) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (2==v55) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or (569 -(367 + 201)) ;v55=3;end end end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=v32();local v82;if (v81==(878 -(282 + 595))) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v70[v80]=v82;end v68[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1638 -(1523 + 114) )==0) then local v110=0;local v111;local v112;local v113;while true do if (v110==1) then v113={v33(),v33(),nil,nil};if (v111==0) then local v122=0;while true do if (v122==0) then v113[3]=v33();v113[5 -1 ]=v33();break;end end elseif (v111==1) then v113[3]=v34();elseif (v111==2) then v113[3]=v34() -(2^16) ;elseif (v111==3) then local v133=0;while true do if (0==v133) then v113[3]=v34() -(2^16) ;v113[4]=v33();break;end end end v110=2;end if (v110==0) then v111=v31(v85,2,3);v112=v31(v85,4,6);v110=1;end if (v110==3) then if (v31(v112,3,3)==1) then v113[4]=v70[v113[4]];end v65[v84]=v113;break;end if (v110==2) then if (v31(v112,1,1)==(1066 -(68 + 997))) then v113[2]=v70[v113[2]];end if (v31(v112,2,2)==1) then v113[1273 -(226 + 1044) ]=v70[v113[3]];end v110=3;end end end end for v86=1,v34() do v66[v86-(4 -3) ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v88=v75;local v89=v76;local v90=v77;local v91=v38;local v92=1;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v108=0,v96 do if (v108>=v90) then v94[v108-v90 ]=v95[v108 + 1 ];else v98[v108]=v95[v108 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do local v109=0;while true do if (v109==1) then if (v101<=35) then if (v101<=17) then if (v101<=8) then if (v101<=3) then if (v101<=1) then if (v101==0) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else do return v98[v100[2]]();end end elseif (v101>2) then v98[v100[2]]=v74[v100[3]];else do return;end end elseif (v101<=5) then if (v101>(4 + 0)) then local v139=v100[1 + 1 ];v98[v139]=v98[v139](v21(v98,v139 + 1 ,v100[3]));else local v141=0;local v142;local v143;while true do if (1==v141) then v98[v142 + 1 ]=v143;v98[v142]=v143[v100[4]];break;end if (v141==0) then v142=v100[2];v143=v98[v100[960 -(892 + 65) ]];v141=1;end end end elseif (v101<=6) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101>7) then local v260=0;local v261;while true do if (v260==0) then v261=v100[2];v98[v261](v21(v98,v261 + 1 ,v93));break;end end elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=12) then if (v101<=10) then if (v101>9) then v98[v100[2]]=v40(v89[v100[3]],nil,v74);else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101==11) then v98[v100[4 -2 ]]=v98[v100[5 -2 ]];else local v148=0;local v149;local v150;local v151;while true do if (v148==0) then v149=v100[2];v150=v98[v149];v148=1;end if (v148==1) then v151=v100[3];for v328=1,v151 do v150[v328]=v98[v149 + v328 ];end break;end end end elseif (v101<=14) then if (v101==13) then local v152=v100[2];local v153=v98[v152 + 2 ];local v154=v98[v152] + v153 ;v98[v152]=v154;if (v153>0) then if (v154<=v98[v152 + 1 ]) then local v331=0;while true do if (v331==0) then v92=v100[3];v98[v152 + 3 ]=v154;break;end end end elseif (v154>=v98[v152 + 1 ]) then local v332=0;while true do if (v332==0) then v92=v100[3];v98[v152 + 3 ]=v154;break;end end end else local v156=0;local v157;while true do if (0==v156) then v157=v100[2];v98[v157](v21(v98,v157 + 1 ,v100[3]));break;end end end elseif (v101<=15) then if v98[v100[2]] then v92=v92 + (1 -0) ;else v92=v100[3];end elseif (v101>16) then local v263=v100[2];local v264=v98[v263];local v265=v98[v263 + 2 ];if (v265>0) then if (v264>v98[v263 + 1 ]) then v92=v100[3];else v98[v263 + 3 ]=v264;end elseif (v264<v98[v263 + 1 ]) then v92=v100[3];else v98[v263 + 3 ]=v264;end else v98[v100[2]][v100[3]]=v98[v100[4]];end elseif (v101<=26) then if (v101<=21) then if (v101<=19) then if (v101==18) then local v158=0;local v159;local v160;local v161;local v162;while true do if (v158==0) then v159=v100[2];v160,v161=v91(v98[v159](v21(v98,v159 + 1 ,v93)));v158=1;end if (v158==1) then v93=(v161 + v159) -1 ;v162=0;v158=2;end if (v158==2) then for v333=v159,v93 do v162=v162 + 1 ;v98[v333]=v160[v162];end break;end end else v92=v100[3];end elseif (v101==20) then local v164=v100[2];v98[v164]=v98[v164](v21(v98,v164 + 1 ,v93));elseif (v98[v100[352 -(87 + 263) ]]==v100[4]) then v92=v92 + 1 ;else v92=v100[183 -(67 + 113) ];end elseif (v101<=23) then if (v101>22) then local v166=0;local v167;local v168;while true do if (v166==1) then for v336=v167 + 1 ,v100[3] do v15(v168,v98[v336]);end break;end if (v166==0) then v167=v100[2];v168=v98[v167];v166=1;end end else local v169=v89[v100[3]];local v170;local v171={};v170=v18({},{[v7("\140\23\6\242\212\94\171","\59\211\72\111\156\176")]=function(v240,v241) local v242=0;local v243;while true do if (v242==0) then v243=v171[v241];return v243[1][v243[2]];end end end,[v7("\113\184\237\40\89\142\237\41\75\159","\77\46\231\131")]=function(v244,v245,v246) local v247=0;local v248;while true do if (v247==0) then v248=v171[v245];v248[1][v248[2]]=v246;break;end end end});for v249=1,v100[3 + 1 ] do local v250=0;local v251;while true do if (v250==1) then if (v251[2 -1 ]==11) then v171[v249-1 ]={v98,v251[3]};else v171[v249-1 ]={v73,v251[11 -8 ]};end v97[ #v97 + 1 ]=v171;break;end if (0==v250) then v92=v92 + 1 ;v251=v88[v92];v250=1;end end end v98[v100[954 -(802 + 150) ]]=v40(v169,v170,v74);end elseif (v101<=24) then v98[v100[2]]=v98[v100[3]]%v100[4] ;elseif (v101==25) then v98[v100[2]]= #v98[v100[3]];else v98[v100[2]]=v98[v100[3]][v100[10 -6 ]];end elseif (v101<=30) then if (v101<=28) then if (v101==(48 -21)) then local v174=0;local v175;local v176;local v177;local v178;while true do if (2==v174) then for v342=v175,v93 do v178=v178 + 1 ;v98[v342]=v176[v178];end break;end if (1==v174) then v93=(v177 + v175) -(1 + 0) ;v178=0;v174=2;end if (v174==0) then v175=v100[2];v176,v177=v91(v98[v175](v98[v175 + 1 ]));v174=1;end end else local v179=v100[2];local v180,v181=v91(v98[v179](v21(v98,v179 + (998 -(915 + 82)) ,v100[3])));v93=(v181 + v179) -1 ;local v182=0;for v252=v179,v93 do local v253=0;while true do if (v253==0) then v182=v182 + 1 ;v98[v252]=v180[v182];break;end end end end elseif (v101==29) then v98[v100[2]]={};else local v184=v100[2];local v185=v98[v184];local v186=v100[8 -5 ];for v254=1 + 0 ,v186 do v185[v254]=v98[v184 + v254 ];end end elseif (v101<=32) then if (v101>31) then v98[v100[2]]=v98[v100[3]];else for v257=v100[2],v100[3] do v98[v257]=nil;end end elseif (v101<=33) then local v189=v100[2];v98[v189]=v98[v189](v21(v98,v189 + 1 ,v93));elseif (v101==34) then local v272=0;local v273;local v274;local v275;while true do if (1==v272) then v275={};v274=v18({},{[v7("\133\107\191\78\190\81\174","\32\218\52\214")]=function(v367,v368) local v369=0;local v370;while true do if (v369==0) then v370=v275[v368];return v370[1][v370[2]];end end end,[v7("\113\40\63\173\230\185\75\94\75\15","\58\46\119\81\200\145\208\37")]=function(v371,v372,v373) local v374=v275[v372];v374[1][v374[2]]=v373;end});v272=2;end if (v272==2) then for v376=1 -0 ,v100[4] do local v377=0;local v378;while true do if (0==v377) then v92=v92 + 1 ;v378=v88[v92];v377=1;end if (v377==1) then if (v378[1]==11) then v275[v376-1 ]={v98,v378[3]};else v275[v376-1 ]={v73,v378[1190 -(1069 + 118) ]};end v97[ #v97 + 1 ]=v275;break;end end end v98[v100[2]]=v40(v273,v274,v74);break;end if (v272==0) then v273=v89[v100[3]];v274=nil;v272=1;end end else local v276=v100[2];v98[v276]=v98[v276]();end elseif (v101<=53) then if (v101<=44) then if (v101<=39) then if (v101<=37) then if (v101==36) then local v191=0;local v192;local v193;while true do if (v191==0) then v192=v100[4 -2 ];v193=v98[v192];v191=1;end if (v191==1) then for v347=v192 + 1 ,v93 do v15(v193,v98[v347]);end break;end end else v98[v100[2]]=v100[3] + v98[v100[4]] ;end elseif (v101==38) then v98[v100[2]]=v74[v100[3]];else v92=v100[3];end elseif (v101<=41) then if (v101==40) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v98[v100[6 -3 ]][v100[4]];end elseif (v101<=42) then local v200=0;local v201;while true do if (v200==0) then v201=v100[2];v98[v201]=v98[v201]();break;end end elseif (v101>43) then local v279=v100[1 + 1 ];v98[v279](v21(v98,v279 + 1 ,v100[3]));else local v280=0;local v281;local v282;local v283;local v284;while true do if (v280==0) then v281=v100[2];v282,v283=v91(v98[v281](v21(v98,v281 + 1 ,v100[3])));v280=1;end if (v280==1) then v93=(v283 + v281) -1 ;v284=0;v280=2;end if (v280==2) then for v379=v281,v93 do v284=v284 + 1 ;v98[v379]=v282[v284];end break;end end end elseif (v101<=48) then if (v101<=46) then if (v101==45) then local v202=v100[2];local v203=v98[v100[3]];v98[v202 + 1 ]=v203;v98[v202]=v203[v100[4]];else v98[v100[2]]=v100[3];end elseif (v101>47) then v98[v100[2]][v100[3]]=v98[v100[4]];else local v211=v100[2];do return v98[v211](v21(v98,v211 + 1 ,v100[3]));end end elseif (v101<=50) then if (v101==49) then local v212=v100[3 -1 ];do return v98[v212](v21(v98,v212 + 1 ,v100[3]));end else local v213=v100[2];v98[v213]=v98[v213](v21(v98,v213 + 1 ,v100[3]));end elseif (v101<=51) then v98[v100[2 + 0 ]]=v100[3] + v98[v100[4]] ;elseif (v101==52) then for v318=v100[2],v100[3] do v98[v318]=nil;end else v98[v100[2]]=v40(v89[v100[3]],nil,v74);end elseif (v101<=62) then if (v101<=57) then if (v101<=55) then if (v101>(845 -(368 + 423))) then local v216=0;local v217;while true do if (v216==0) then v217=v100[2];v98[v217](v21(v98,v217 + 1 ,v93));break;end end else do return v98[v100[2]]();end end elseif (v101>56) then v98[v100[2]]=v73[v100[3]];else v98[v100[2]]=v98[v100[3]] + v100[4] ;end elseif (v101<=59) then if (v101>(182 -124)) then v98[v100[2]]=v98[v100[3]] + v100[4] ;else local v222=0;local v223;while true do if (v222==0) then v223=v100[2];do return v21(v98,v223,v93);end break;end end end elseif (v101<=(78 -(10 + 8))) then local v224=0;local v225;local v226;local v227;while true do if (v224==0) then v225=v100[2];v226=v98[v225];v224=1;end if (v224==1) then v227=v98[v225 + 2 ];if (v227>0) then if (v226>v98[v225 + 1 ]) then v92=v100[11 -8 ];else v98[v225 + 3 ]=v226;end elseif (v226<v98[v225 + 1 ]) then v92=v100[3];else v98[v225 + 3 ]=v226;end break;end end elseif (v101>61) then local v286=v100[444 -(416 + 26) ];local v287=v98[v286 + 2 ];local v288=v98[v286] + v287 ;v98[v286]=v288;if (v287>(0 -0)) then if (v288<=v98[v286 + 1 ]) then local v382=0;while true do if (v382==0) then v92=v100[3];v98[v286 + 3 ]=v288;break;end end end elseif (v288>=v98[v286 + 1 ]) then local v383=0;while true do if (v383==0) then v92=v100[2 + 1 ];v98[v286 + 3 ]=v288;break;end end end else local v290=0;local v291;local v292;while true do if (v290==0) then v291=v100[2];v292=v98[v291];v290=1;end if (v290==1) then for v384=v291 + 1 ,v93 do v15(v292,v98[v384]);end break;end end end elseif (v101<=67) then if (v101<=64) then if (v101==(110 -47)) then v98[v100[2]]= #v98[v100[3]];else local v229=0;local v230;local v231;local v232;local v233;while true do if (v229==1) then v93=(v232 + v230) -1 ;v233=0;v229=2;end if (0==v229) then v230=v100[2];v231,v232=v91(v98[v230](v21(v98,v230 + 1 ,v93)));v229=1;end if (v229==2) then for v348=v230,v93 do v233=v233 + 1 ;v98[v348]=v231[v233];end break;end end end elseif (v101<=65) then local v234=0;local v235;local v236;local v237;local v238;while true do if (v234==2) then for v351=v235,v93 do v238=v238 + 1 ;v98[v351]=v236[v238];end break;end if (0==v234) then v235=v100[2];v236,v237=v91(v98[v235](v98[v235 + (439 -(145 + 293)) ]));v234=1;end if (1==v234) then v93=(v237 + v235) -1 ;v238=0;v234=2;end end elseif (v101>66) then v98[v100[432 -(44 + 386) ]]=v100[3];else v98[v100[2]]=v73[v100[1489 -(998 + 488) ]];end elseif (v101<=69) then if (v101==(22 + 46)) then do return;end elseif (v98[v100[2]]==v100[4 + 0 ]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=70) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;elseif (v101>71) then local v298=0;local v299;while true do if (0==v298) then v299=v100[2];do return v21(v98,v299,v93);end break;end end else v98[v100[2]]={};end v92=v92 + (773 -(201 + 571)) ;break;end if (v109==0) then v100=v88[v92];v101=v100[118 -(32 + 85) ];v109=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
